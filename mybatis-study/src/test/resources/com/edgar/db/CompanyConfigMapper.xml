<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edgar.mapper.CompanyConfigMapper">
    <resultMap id="CompanyConfigResultMap" type="CompanyConfig">
        <result column="config_id" property="configId" />
        <result column="company_id" property="companyId" />
        <result column="config_key" property="configKey" />
        <result column="config_value" property="configValue" />
        <result column="description" property="description" />
    </resultMap>

    <sql id="all_column">
        config_id, company_id, config_key, config_value, description
    </sql>

    <sql id="limit">
        <if test="limit != null">
            limit
            <if test="offset != null">
                #{offset},
            </if>
            #{limit}
        </if>
    </sql>

    <insert id="insert" parameterType="CompanyConfig">
        insert into
        company_config(config_id, company_id, config_key, config_value, description)
        values(#{configId}, #{companyId}, #{configKey}, #{configValue}, #{description})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="int">
        delete from company_config
        where config_id = #{id}
    </delete>

    <update id="updateByPrimaryKey" parameterType="CompanyConfig">
        update company_config
        <set>
            <if test="configId != null">
                config_id = #{configId},
            </if>
            <if test="companyId != null">
                company_id = #{companyId},
            </if>
            <if test="configKey != null">
                config_key = #{configKey},
            </if>
            <if test="configValue != null">
                config_value = #{configValue},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
        </set>
        where config_id = #{configId}
    </update>

    <select id="selectByPrimaryKey" resultMap="CompanyConfigResultMap" parameterType="int">
        select config_id, company_id, config_key, config_value, description
        from company_config
        where config_id = #{id}
    </select>

    <!-- START 写在START和END中间的代码不会被替换 -->
    <select id="count" resultType="int" parameterType="map">
        select count(*) from company_config
        <where>
            <if test="configKey != null">
                config_key = #{configKey}
            </if>
            <if test="configValue != null">
                AND config_value = #{configValue}
            </if>
        </where>
        <include refid="limit" />
    </select>
    <select id="query" resultMap="CompanyConfigResultMap" parameterType="map">
        select config_id, company_id, config_key, config_value, description
        from company_config
        <where>
            <if test="configKey != null">
                config_key = #{configKey}
            </if>
            <if test="configValue != null">
                AND config_value = #{configValue}
            </if>
        </where>
        <include refid="limit" />
    </select>
    <update id="createTable">
        create table `company_config` (
        `config_id` int(11) not null,
        `company_id` int(11) default null,
        `config_key` varchar(16) not null,
        `config_value` varchar(16) not null,
        `description` varchar(128) default null,
        primary key (`config_id`)
        ) engine=innodb default charset=utf8 comment='如果company_id=-1,则表示是全局配置项';
    </update>
    <update id="dropTable">
        drop table if exists `company_config`;
    </update>
    <!-- END 写在START和END中间的代码不会被替换-->
    <!-- END 写在START和END中间的代码不会被替换-->

</mapper>