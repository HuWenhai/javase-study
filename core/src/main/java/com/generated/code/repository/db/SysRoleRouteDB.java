package com.generated.code.repository.db;

import java.sql.SQLException;
import org.springframework.jdbc.core.RowMapper;
import java.sql.ResultSet;
import java.util.LinkedHashMap;
import java.util.Map;
import com.edgar.core.jdbc.RowUnmapper;
import com.generated.code.domain.SysRoleRoute;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
public class SysRoleRouteDB
{

	private static String TABLE_NAME = "SYS_ROLE_ROUTE";

	private static String TABLE_ALIAS = "srr";

	public static String getTableName()
	{
		return TABLE_NAME;
	}

	public static String getTableAlias()
	{
		return TABLE_NAME + " as " + TABLE_ALIAS;
	}

	public static String getAlias()
	{
		return TABLE_ALIAS;
	}

	public static String selectAllColumns(boolean ... useAlias)
	{
		return (useAlias[0] ? TABLE_ALIAS : TABLE_NAME) + ".*";
	}

	public enum COLUMNS
	{
		ROLE_ROUTE_ID("role_route_id"),
		ROUTE_ID("route_id"),
		ROLE_ID("role_id"),
		;

		private String columnName;

		private COLUMNS (String columnName)
		{
			this.columnName = columnName;
		}

		public void setColumnName (String columnName)
		{
			this.columnName = columnName;
		}

		public String getColumnName ()
		{
			return this.columnName;
		}

		public String getColumnAlias ()
		{
			return TABLE_ALIAS + "." + this.columnName;
		}

		public String getColumnAliasAsName ()
		{
			return TABLE_ALIAS  + "." + this.columnName + " as " + TABLE_ALIAS + "_" + this.columnName;
		}

		public String getColumnAliasName ()
		{
			return TABLE_ALIAS + "_" + this.columnName;
		}

	}

	public SysRoleRouteDB ()
	{

	}

	public static final RowMapper<SysRoleRoute> ROW_MAPPER = new SysRoleRouteRowMapper ();
	public static final class  SysRoleRouteRowMapper implements RowMapper<SysRoleRoute>
	{
		public SysRoleRoute mapRow(ResultSet rs, int rowNum) throws SQLException
		{
			SysRoleRoute obj = new SysRoleRoute();
			obj.setRoleRouteId(rs.getInt(COLUMNS.ROLE_ROUTE_ID.getColumnName()));
			obj.setRouteId(rs.getInt(COLUMNS.ROUTE_ID.getColumnName()));
			obj.setRoleId(rs.getInt(COLUMNS.ROLE_ID.getColumnName()));
			return obj;
		}
	}

	public static final RowUnmapper<SysRoleRoute> ROW_UNMAPPER = new SysRoleRouteRowUnmapper ();
	public static final class SysRoleRouteRowUnmapper implements RowUnmapper<SysRoleRoute>
	{
		public Map<String, Object> mapColumns(SysRoleRoute sysroleroute)
		{
			Map<String, Object> mapping = new LinkedHashMap<String, Object>();
			mapping.put(COLUMNS.ROLE_ROUTE_ID.getColumnName(), sysroleroute.getRoleRouteId());
			mapping.put(COLUMNS.ROUTE_ID.getColumnName(), sysroleroute.getRouteId());
			mapping.put(COLUMNS.ROLE_ID.getColumnName(), sysroleroute.getRoleId());
			return mapping;
		}
	}

	public static final RowMapper<SysRoleRoute> ALIAS_ROW_MAPPER = new SysRoleRouteAliasRowMapper ();
	public static final class  SysRoleRouteAliasRowMapper implements RowMapper<SysRoleRoute>
	{
		public SysRoleRoute mapRow(ResultSet rs, int rowNum) throws SQLException
		{
			SysRoleRoute obj = new SysRoleRoute();
			obj.setRoleRouteId(rs.getInt(COLUMNS.ROLE_ROUTE_ID.getColumnAliasName()));
			obj.setRouteId(rs.getInt(COLUMNS.ROUTE_ID.getColumnAliasName()));
			obj.setRoleId(rs.getInt(COLUMNS.ROLE_ID.getColumnAliasName()));
			return obj;
		}
	}

	public static StringBuffer getAllColumnAliases ()
	{
		StringBuffer strBuf = new StringBuffer ();
		int i = COLUMNS.values().length;
		for (COLUMNS c : COLUMNS.values())
		{
			strBuf.append (c.getColumnAliasAsName ());
			if (--i > 0)
				strBuf.append (", ");
		}
		return strBuf;
	}

	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}