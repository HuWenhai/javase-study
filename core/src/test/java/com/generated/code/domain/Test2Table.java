package com.generated.code.domain;

import com.edgar.core.jdbc.Persistable;
import org.apache.commons.lang3.builder.ToStringBuilder;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.validator.constraints.NotEmpty;
import com.edgar.core.jdbc.IPKey;
import static com.nurkiewicz.jdbcrepository.JdbcRepository.pk;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Collections;
import java.io.Serializable;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
public class Test2Table implements Persistable<Test2Table.PKey>
{

	private static final long serialVersionUID = 1L;

	@NotEmpty
	@Size (max = 32)
	private String testId;

	@NotEmpty
	@Size (max = 32)
	private String testCode2;

	@NotEmpty
	@Size (max = 32)
	private String dictName;

	@NotEmpty
	@Size (max = 32)
	private String parentCode = "-1";

	@NotNull
	private Integer sorted = 9999;


	public Test2Table ()
	{

	}

	public PKey getId()
	{
		return new Test2Table.PKey(this.testCode2, this.testId);
	}

	public void setTestId (String testId)
	{
		this.testId = testId;
	}

	public String getTestId ()
	{
		return this.testId;
	}

	public void setTestCode2 (String testCode2)
	{
		this.testCode2 = testCode2;
	}

	public String getTestCode2 ()
	{
		return this.testCode2;
	}

	public void setDictName (String dictName)
	{
		this.dictName = dictName;
	}

	public String getDictName ()
	{
		return this.dictName;
	}

	public void setParentCode (String parentCode)
	{
		this.parentCode = parentCode;
	}

	public String getParentCode ()
	{
		return this.parentCode;
	}

	public void setSorted (Integer sorted)
	{
		this.sorted = sorted;
	}

	public Integer getSorted ()
	{
		return this.sorted;
	}

	@Override
	public String toString () 
	{
		return ToStringBuilder.reflectionToString (this); 
	}

	public static class PKey implements Serializable, IPKey
	{
		private static final long serialVersionUID = 1L;

		private final String test_code2;
		private final String test_id;
		public PKey(String test_code2, String test_id)
		{
			this.test_code2 = test_code2;
			this.test_id = test_id;
		}

		@Override
		public Map<String, Object> toMap()
		{
			Map<String, Object> mapping = new LinkedHashMap<String, Object>();
			mapping.put("test_code2", test_code2);
			mapping.put("test_id", test_id);
			return Collections.unmodifiableMap(mapping);
		}

	}

	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}